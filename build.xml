<?xml version="1.0" encoding="UTF-8"?>

<project name="BaltradNode" default="deliverable" basedir=".">
  <description>Builds BaltradDex, also supports testing and deployment</description>
  <property name="lib.dir" value="lib"/>
  <property name="extralib.dir" value="extralib"/>
  <property name="src.dir" value="src"/>
  <property name="web.dir" value="web"/>
  <property name="etc.dir" value="etc"/>
  <property name="build.dir" value="build"/>
  <property name="build.web.dir" value="${build.dir}/web"/>
  <property name="build.metainf.dir" value="${build.web.dir}/META-INF" />
  <property name="build.webinf.dir" value="${build.web.dir}/WEB-INF" />
  <property name="build.jsp.dir" value="${build.webinf.dir}/jsp"/>
  <property name="build.classes.dir" value="${build.webinf.dir}/classes"/>
  <property name="build.lib.dir" value="${build.webinf.dir}/lib"/>

  <property file="${etc.dir}/testdb.properties"/>
  <property file="${etc.dir}/appserver.properties"/>
  
  <!-- Configure ant tasks for tomcat deployment -->
  <taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
  <taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
  <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
  <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
  <taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
  <taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
  <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
  <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>

  
  <path id="lib.path">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${extralib.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="prepare">
    <delete dir="${build.dir}" />
    <mkdir dir="${build.web.dir}" />
    <mkdir dir="${build.metainf.dir}" />
    <mkdir dir="${build.webinf.dir}" />
    <mkdir dir="${build.jsp.dir}" />
    <mkdir dir="${build.classes.dir}" />
    <mkdir dir="${build.lib.dir}" />

    <copy todir="${build.lib.dir}">
      <fileset dir="lib/dom4j">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/hibernate">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/httpclient">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/jakarta-commons">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/jcip">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/spring">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="lib/slf4j">
      	<include name="*.jar"/>
      </fileset>
      <fileset dir="lib">
      	<include name="mysql-connector-java-5.1.6-bin.jar"/>
        <include name="apache-mime4j-0.6.jar"/>
      </fileset>
    </copy>

    <copy todir="${build.web.dir}">
      <fileset dir="web">
        <include name="redirect.jsp"/>
        <include name="includes/**/*.jsp" />
        <include name="BaltradData/**" />
      </fileset>
    </copy>

    <copy todir="${build.metainf.dir}">
      <fileset dir="${src.dir}/conf">
        <include name="MANIFEST.MF"/>
      </fileset>
      <fileset dir="${web.dir}/META-INF">
        <include name="context.xml"/>
      </fileset>
    </copy>

    <copy todir="${build.webinf.dir}">
      <fileset dir="web/WEB-INF">
        <include name="applicationContext.xml" />
        <include name="baltraddex-servlet.xml" />
        <include name="web.xml" />
        <include name="jsp/**/*.jsp" />
      </fileset>
    </copy>

    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}/java">
        <include name="**/*.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="prepare">
    <javac encoding="8859_1" srcdir="${src.dir}" deprecation="on"
           destdir="${build.classes.dir}">
      <include name="**/*.java"/>
      <classpath refid="lib.path"/>
    </javac>
  </target>

  <target name="deliverable" depends="compile">
    <jar destfile="${build.dir}/BaltradDex.war" basedir="${build.dir}/web">
      <include name="**"/>
    </jar>
  </target>  

  <target name="clean">
    <delete dir="build"/>
    <delete>
      <fileset dir=".">
        <include name="**/*.bak"/>
        <include name="**/*~"/>
      </fileset>
    </delete>
  </target>
	
  <target name="create-testdb">
    <sql classpath="${lib.dir}/${db.jar}"
      	 driver="${db.driver}"
    	 url="${db.url}"
    	 userid="${db.user}" 
         password="${db.pwd}" >
      <transaction src="${etc.dir}/create_db.sql"/>
    </sql>
  </target>
  
  <target name="test.deploy"
    depends="deliverable, create-testdb, context.status"
    if="context.deployable">
    <echo message="Deploying ${mgr.path} to ${mgr.url}"/>
    <deploy url="${mgr.url}"
      username="${mgr.username}"
      password="${mgr.password}"
      path="${mgr.path}"
      update="${mgr.update}"
      war="file:${build.dir}/BaltradDex.war"/>
  </target>
 
  <!-- From apache-tomcats user manual for using the ant-manager task -->
  <target name="context.status">
    <property name="running" value="${mgr.path}:running"/>
	<property name="stopped" value="${mgr.path}:stopped"/>
	
    <list url="${mgr.url}"
      outputproperty="ctx.status"
      username="${mgr.username}"
      password="${mgr.password}">
    </list>
		
    <condition property="context.running">
      <contains string="${ctx.status}" substring="${running}"/>
    </condition>
    <condition property="context.stopped">
      <contains string="${ctx.status}" substring="${stopped}"/>
    </condition>
    <condition property="context.notInstalled">
      <and>
        <isfalse value="${context.running}"/>
        <isfalse value="${context.stopped}"/>
      </and>
    </condition>
    <condition property="context.deployable">
      <or>
        <istrue value="${context.notInstalled}"/>
        <and>
          <istrue value="${context.running}"/>
          <istrue value="${mgr.update}"/>
        </and>
        <and>
          <istrue value="${context.stopped}"/>
          <istrue value="${mgr.update}"/>
        </and>
      </or>
    </condition>
    <condition property="context.undeployable">
      <or>
        <istrue value="${context.running}"/>
        <istrue value="${context.stopped}"/>
      </or>
    </condition>
  </target>
  
</project>

