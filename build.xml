<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="BaltradNode" default="default" basedir=".">
    <description>Builds, tests, and runs the project BaltradDex.</description>
    <import file="nbproject/build-impl.xml"/>
    <!--

    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

      -pre-init:                 called before initialization of project properties 
      -post-init:                called after initialization of project properties 
      -pre-compile:              called before javac compilation 
      -post-compile:             called after javac compilation 
      -pre-compile-single:       called before javac compilation of single file
      -post-compile-single:      called after javac compilation of single file
      -pre-compile-test:         called before javac compilation of JUnit tests
      -post-compile-test:        called after javac compilation of JUnit tests
      -pre-compile-test-single:  called before javac compilation of single JUnit test
      -post-compile-test-single: called after javac compilation of single JUunit test
      -pre-dist:                 called before archive building 
      -post-dist:                called after archive building 
      -post-clean:               called after cleaning build products 
      -pre-run-deploy:           called before deploying
      -post-run-deploy:          called after deploying

    Example of pluging an obfuscator after the compilation could look like 

        <target name="-post-compile">
            <obfuscate>
                <fileset dir="${build.classes.dir}"/>
            </obfuscate>
        </target>

    For list of available properties check the imported 
    nbproject/build-impl.xml file. 


    Other way how to customize the build is by overriding existing main targets.
    The target of interest are: 

      init-macrodef-javac:    defines macro for javac compilation
      init-macrodef-junit:   defines macro for junit execution
      init-macrodef-debug:    defines macro for class debugging
      do-dist:                archive building
      run:                    execution of project 
      javadoc-build:          javadoc generation 

    Example of overriding the target for project execution could look like 

        <target name="run" depends="<PROJNAME>-impl.jar">
            <exec dir="bin" executable="launcher.exe">
                <arg file="${dist.jar}"/>
            </exec>
        </target>

    Notice that overridden target depends on jar target and not only on 
    compile target as regular run target does. Again, for list of available 
    properties which you can use check the target you are overriding in 
    nbproject/build-impl.xml file. 

    -->

    <!--
    General properties
    -->
    <property name="lib.dir" value="lib"/>
    <!-- 
    Set classpath
    -->
    <path id="classpath.path" description="CLASSPATH for build script">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!--
    Set database connection properties
    -->
    <property name="pgsqljar" value="postgresql-8.4-701.jdbc4.jar"/>
    <property name="pgsqldriver" value="org.postgresql.Driver"/>
    <property name="pgsqlport" value="5432"/>
    <property name="pgsqlalias" value="baltrad_db"/>
    <property name="pgsqluser" value="baltrad"/>
    <property name="pgsqlpasswd" value="baltrad"/>

    <!--
    Execute DDL commands
    -->
    <target name="-pre-init">
        <sql classpath="${lib.dir}/${pgsqljar}"
            url="jdbc:postgresql://localhost:${pgsqlport}/${pgsqlalias}" driver="${pgsqldriver}"
            userid="${pgsqluser}" password="${pgsqlpasswd}" print="yes">

            -- SQL script for BaltradDex application -----------------------------------------------
            
            -- drop tables if exist ----------------------------------------------------------------

            DROP TABLE IF EXISTS dex_subscriptions;
            DROP TABLE IF EXISTS dex_aux_subscriptions;
            DROP TABLE IF EXISTS dex_delivery_register;
            DROP TABLE IF EXISTS dex_users;
            DROP TABLE IF EXISTS dex_messages;
            DROP TABLE IF EXISTS dex_channels;
            DROP TABLE IF EXISTS dex_data;
            DROP SEQUENCE IF EXISTS log_entry_id_seq;
            DROP SEQUENCE IF EXISTS subscription_id_seq;
            DROP SEQUENCE IF EXISTS aux_subscription_id_seq;
            DROP SEQUENCE IF EXISTS delivery_register_id_seq;

            -- create tables -----------------------------------------------------------------------

            -- dex_users ---------------------------------------------------------------------------

            CREATE TABLE dex_users
            (
                id SERIAL NOT NULL,
                name VARCHAR(64) NOT NULL UNIQUE,
                password VARCHAR(64) NOT NULL,
                role VARCHAR(32) NOT NULL,
                factory VARCHAR(256) NOT NULL,
                country VARCHAR(64) NOT NULL,
                city VARCHAR(64) NOT NULL,
                zip_code VARCHAR(12) NOT NULL,
                street VARCHAR(64) NOT NULL,
                number VARCHAR(12) NOT NULL,
                phone VARCHAR(32) NOT NULL,
                email VARCHAR(64) NOT NULL,
                node_address VARCHAR(64) NOT NULL,
                local_directory VARCHAR(128) NOT NULL,
                PRIMARY KEY (id)
            );

            -- log_entry_id_seq --------------------------------------------------------------------
            
            CREATE SEQUENCE log_entry_id_seq;

            -- dex_messages ------------------------------------------------------------------------

            CREATE TABLE dex_messages
            (
                id INT NOT NULL UNIQUE DEFAULT NEXTVAL('log_entry_id_seq'),
                date VARCHAR(10) NOT NULL,
                time VARCHAR(8) NOT NULL,
                type VARCHAR(12) NOT NULL,
                message TEXT NOT NULL,
                PRIMARY KEY (id)
            );

            -- dex_channels ------------------------------------------------------------------------

            CREATE TABLE dex_channels
		    (
		        id SERIAL NOT NULL,
		        name VARCHAR(32) NOT NULL,
		        wmo_number INT,
		        selected BOOLEAN DEFAULT false,
                PRIMARY KEY (id)

		    );

            -- subscription_id_seq -----------------------------------------------------------------

            CREATE SEQUENCE subscription_id_seq;

            -- dex_subscriptions -------------------------------------------------------------------

            CREATE TABLE dex_subscriptions
		    (
		        id INT NOT NULL UNIQUE DEFAULT NEXTVAL('subscription_id_seq'),
		        user_id INT NOT NULL REFERENCES dex_users (id) ON DELETE CASCADE ON UPDATE CASCADE,
		        channel_id INT NOT NULL REFERENCES dex_channels (id)
                                                               ON DELETE CASCADE ON UPDATE CASCADE,
                PRIMARY KEY (id)
		    );

            -- aux_subscription_id_seq -------------------------------------------------------------

            CREATE SEQUENCE aux_subscription_id_seq;

            -- dex_aux_subscriptions ---------------------------------------------------------------

            CREATE TABLE dex_aux_subscriptions
		    (
		        id INT NOT NULL UNIQUE DEFAULT NEXTVAL('aux_subscription_id_seq'),
		        user_id INT NOT NULL REFERENCES dex_users (id) ON DELETE CASCADE ON UPDATE CASCADE,
		        channel_id INT NOT NULL REFERENCES dex_channels (id)
                                                               ON DELETE CASCADE ON UPDATE CASCADE,
                PRIMARY KEY (id)
		    );

            -- dex_data ----------------------------------------------------------------------------

            CREATE TABLE dex_data
            (
               id SERIAL NOT NULL,
               channel_name VARCHAR(32) NOT NULL,
               path VARCHAR(256) NOT NULL,
               date VARCHAR(10) NOT NULL,
               time VARCHAR(8) NOT NULL,
               PRIMARY KEY (id)
            );

            -- delivery_register_id_seq

            CREATE SEQUENCE delivery_register_id_seq;
            
            -- dex_delivery_register ---------------------------------------------------------------

            CREATE TABLE dex_delivery_register
		    (
		        id INT NOT NULL UNIQUE DEFAULT NEXTVAL('delivery_register_id_seq'),
		        user_id INT NOT NULL REFERENCES dex_users (id),
		        data_id INT NOT NULL REFERENCES dex_data (id),
		        PRIMARY KEY (id)
		    );

            -- insert test data --------------------------------------------------------------------

            -- dex_users ---------------------------------------------------------------------------

            INSERT INTO dex_users (name, password, role, factory, country, city, zip_code,
                street, number, phone, email, node_address, local_directory)
                VALUES ('imgw', MD5('baltrad'), 'operator',
                   'Institute of Meteorology and Water Management', 'Poland', 'Warsaw',
                   '01-673', 'Podlesna', '61', '+48 22 569 44 91', 'baltrad.admin@imgw.pl',
                   'baltrad.imgw.pl', 'incoming'),
                   ('admin', MD5('admin'), 'administrator',
                   'Institute of Meteorology and Water Management', 'Poland', 'Warsaw',
                   '01-673', 'Podlesna', '61', '+48 22 569 44 91', 'baltrad.admin@imgw.pl',
                   'http://localhost:8081/BaltradDex/receiver.htm', 'incoming'),
                   ('laptok', MD5('baltrad'), 'user',
                   'Institute of Meteorology and Water Management', 'Poland', 'Warsaw',
                   '01-673', 'Podlesna', '61', '+48 22 569 44 91', 'baltrad.admin@imgw.pl',
                   'http://172.30.9.171:8081/BaltradDex/receiver.htm', 'incoming'),
                   ('rand', MD5('randomize'), 'user',
                   'Institute of Meteorology and Water Management', 'Poland', 'Warsaw',
                   '01-673', 'Podlesna', '61', '+48 22 569 44 91', 'baltrad.admin@imgw.pl',
                   'http://172.30.9.34:8081/BaltradDex/receiver.htm', 'incoming');

            -- dex_channels ------------------------------------------------------------------------

            INSERT INTO dex_channels (name, wmo_number) VALUES ('legionowo', '12374'),
                ('swidwin', '12220'), ('brzuchania', '12568'), ('pastewnik', '12544'),
                ('rzeszow', '12579'), ('ramza', '12514'), ('poznan', '12331'), ('gdansk', '12151');

            -- dex_data ----------------------------------------------------------------------------

            INSERT INTO dex_data (channel_name, path, date, time) VALUES
                ('brzuchania', 'BaltradData/IMGW/Brzuchania/2007100214008408.h5', '2007/10/02',
                '21:40:00'),
                ('brzuchania', 'BaltradData/IMGW/Brzuchania/2007100200002857.h5', '2007/10/02',
                '00:00:00'),
                ('brzuchania', 'BaltradData/IMGW/Brzuchania/2008061615002914.h5', '2008/06/16',
                '15:00:29'),
                ('brzuchania', 'BaltradData/IMGW/Brzuchania/2008061615002971.h5', '2008/06/16',
                '15:00:00'),
                
                ('gdansk', 'BaltradData/IMGW/Gdansk/2008061615003322.h5', '2008/06/16', '15:00:33'),
                ('gdansk', 'BaltradData/IMGW/Gdansk/2007100214001176.h5', '2007/10/02', '14:00:00'),
                ('gdansk', 'BaltradData/IMGW/Gdansk/2008061615003387.h5', '2008/06/16', '15:00:00'),

                ('legionowo', 'BaltradData/IMGW/Legionowo/2007100214006547.h5', '2007/10/02',
                '14:00:00'),
                ('legionowo', 'BaltradData/IMGW/Legionowo/2007100201102822.h5', '2007/10/02',
                '01:10:00'),
                ('legionowo', 'BaltradData/IMGW/Legionowo/2008061615002517.h5', '2008/06/16',
                '15:00:00'),
                ('legionowo', 'BaltradData/IMGW/Legionowo/2008061615002584.h5', '2008/06/16',
                '15:00:00'),
                
                ('poznan', 'BaltradData/IMGW/Poznan/2007100214006032.h5', '2007/10/02', '14:00:00'),
                ('poznan', 'BaltradData/IMGW/Poznan/2008061615003243.h5', '2008/06/16', '15:00:00'),
                
                ('pastewnik', 'BaltradData/IMGW/Pastewnik/2008061615002736.h5', '2008/06/16',
                '15:00:00'),
                ('pastewnik', 'BaltradData/IMGW/Pastewnik/2008061615002764.h5', '2008/06/16',
                '15:00:00'),

                ('ramza', 'BaltradData/IMGW/Ramza/2007100214006843.h5', '2007/10/02', '14:00:00'),
                ('ramza', 'BaltradData/IMGW/Ramza/2008061615002508.h5', '2008/06/16', '15:00:00'),
                ('ramza', 'BaltradData/IMGW/Ramza/2008061615002522.h5', '2008/06/16', '15:00:00'),
                
                ('rzeszow', 'BaltradData/IMGW/Rzeszow/2007100214008656.h5', '2007/10/02',
                '14:00:00'),
                ('rzeszow', 'BaltradData/IMGW/Rzeszow/2008061615002645.h5', '2008/06/16',
                '15:00:00'),
                ('rzeszow', 'BaltradData/IMGW/Rzeszow/2008061615002676.h5', '2008/06/16',
                '15:00:00'),
                
                ('swidwin', 'BaltradData/IMGW/Swidwin/2007100214008261.h5', '2007/10/02',
                '14:00:00'),
                ('swidwin', 'BaltradData/IMGW/Swidwin/2008061615002401.h5', '2008/06/16',
                '15:00:00'),
                ('swidwin', 'BaltradData/IMGW/Swidwin/2008061615002411.h5', '2008/06/16',
                '15:00:00');

            -- display some records ----------------------------------------------------------------

            SELECT * FROM dex_users;
            SELECT * FROM dex_channels;
            SELECT * FROM dex_data;

            ----------------------------------------------------------------------------------------

        </sql>
    </target>
</project>
