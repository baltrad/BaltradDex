<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2009-2012 Institute of Meteorology and Water Management, IMGW

This file is part of the BaltradDex software.

BaltradDex is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

BaltradDex is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the BaltradDex software.  If not, see http://www.gnu.org/licenses.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    <!-- 
        All non-annotated controllers should be mapped here. 
    --> 
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="latest_messages.htm">urlFilenameController</prop>
                <prop key="exchange.htm">urlFilenameController</prop>
                <prop key="processing.htm">urlFilenameController</prop>
                <prop key="settings.htm">urlFilenameController</prop>
                <prop key="save_radar_status">urlFilenameController</prop>
                <prop key="save_user_account_status.htm">urlFilenameController</prop>
                <prop key="change_user_password_status.htm">urlFilenameController</prop>
                <prop key="clock.htm">urlFilenameController</prop>
            </props>
        </property>
    </bean>
    
    <!-- View resolver -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp" />   
    
    <!-- Configuration manager -->
    <bean id="configurationManager" 
          class="eu.baltrad.dex.config.manager.impl.ConfigurationManager"
          autowire="byType"/>
    
    <!-- Message source -->
    <bean id="messageSource"
          class="eu.baltrad.dex.util.MessageResourceUtil">  
        <property name="basename">
            <value>resources/messages</value>
        </property>
    </bean>      
         
    <bean id="modelMessageHelper" class="eu.baltrad.dex.net.controller.util.ModelMessageHelper">
      <constructor-arg ref="messageSource"/>
      <constructor-arg value="true"/>
    </bean>
    
    <!-- URL filename view controller -->
    <bean id="urlFilenameController"
          class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

    <!-- Login/logout controller -->
    <bean id="loginController" 
          class="eu.baltrad.dex.auth.controller.LoginController"
          autowire="byType"/>
    
    <!-- Node status controller -->
    <bean id="nodeStatusController" 
          class="eu.baltrad.dex.status.controller.NodeStatusController"
          autowire="byType"/>       

    <!-- Node status manager -->
    <bean id="nodeStatusManager" 
          class="eu.baltrad.dex.status.manager.impl.NodeStatusManager"
          autowire="byType"/>   
    
    <!-- Data source file listing controller -->
    <bean id="dataSourceController"
          class="eu.baltrad.dex.datasource.controller.DataSourceFilesController"
          autowire="byType"/>

    <!-- File details controller -->
    <bean id="bltFileDetailsController"
          class="eu.baltrad.dex.db.controller.BltFileDetailsController"
          autowire="byType"/>
          
    <!-- File browser controller -->
    <bean id="bltFileBrowserController"
          class="eu.baltrad.dex.db.controller.BltFileBrowserController"
          autowire="byType"/>

    <!-- File object manager -->
    <bean id="fileObjectManager" 
          class="eu.baltrad.dex.datasource.manager.impl.FileObjectManager"
          autowire="byType"/>

    <!-- Remove subscription controller -->
    <bean id="removeSubscriptionController"
          class="eu.baltrad.dex.net.controller.RemoveSubscriptionController"
          autowire="byType"/>

    <!-- System messages controller -->
    <bean id="liveMessagesController" 
          class="eu.baltrad.dex.log.controller.LiveMessagesController"
          autowire="byType"/>
    
    <!-- System messages controller -->
    <bean id="browseMessagesController" 
          class="eu.baltrad.dex.log.controller.BrowseMessagesController"
          autowire="byType"/>
    
    <!-- Messages table controller -->
    <bean id="messagesTableController" 
          class="eu.baltrad.dex.log.controller.MessagesTableController"
          autowire="byType"/>
    
    <!-- Sticky messages controller -->
    <bean id="stickyMessagesController" 
          class="eu.baltrad.dex.log.controller.StickyMessagesController"
          autowire="byType"/>
    
    <!-- Sticky messages counter -->
    <bean id="stickyMessagesConter" 
          class="eu.baltrad.dex.log.controller.StickyMessagesCounter"
          autowire="byType"/>
    
    <!-- Data download controller -->
    <bean id="bltFileDownloadController"
          class="eu.baltrad.dex.db.controller.BltFileDownloadController"
          autowire="byType"/>

    <!-- Radar manager -->
    <bean id="radarManager" class="eu.baltrad.dex.radar.manager.impl.RadarManager"
          autowire="byType"/>

    <!-- File manager -->
    <bean id="bltFileManager" 
          class="eu.baltrad.dex.db.manager.impl.BltFileManager" 
          autowire="byType"/>
   
    <!-- Frame publisher manager -->
    <bean id="framePublisherManager" 
          class="eu.baltrad.dex.net.util.FramePublisherManager"/>

    <!-- Frame publisher -->
    <bean id="framePublisher" class="eu.baltrad.dex.net.util.FramePublisher"/>
    
    <!-- User settings controller -->
    <bean id="userSettingsController"
          class="eu.baltrad.dex.user.controller.UserSettingsController"
          autowire="byType"/>

    <!-- User manager -->
    <bean id="userManager" 
          class="eu.baltrad.dex.user.manager.impl.UserManager"
          autowire="byType"/>      

    <!-- Role manager -->
    <bean id="roleManager" class="eu.baltrad.dex.user.manager.impl.RoleManager"
          autowire="byType"/>       

    <!-- Delivery register manager -->
    <bean id="registryManager"
          class="eu.baltrad.dex.registry.manager.impl.RegistryManager"
          autowire="byType"/>

	<!-- Protocol manager -->
	<bean id="protocolManager"
		  class="eu.baltrad.dex.net.protocol.impl.ProtocolVersionManager"
		  autowire="byType" />

    <!-- Clear messages controller -->
    <bean id="removeMessagesController" 
          class="eu.baltrad.dex.log.controller.RemoveMessagesController"
          autowire="byType"/>

    <!-- Configure messages controller -->
    <bean id="messagesConfigurationController"
          class="eu.baltrad.dex.config.controller.MessagesConfigurationController"
          autowire="byType"/>
    
    <!-- Configure messages validator -->
    <bean id="messagesConfigurationValidator"
          class="eu.baltrad.dex.config.validator.MessagesConfigurationValidator"/>
    
    <!-- Log manager -->
    <bean id="logManager" class="eu.baltrad.dex.log.manager.impl.LogManager"
          autowire="byType"/>
    
    <!-- DB log appender -->
    <bean id="dbLogAppender" class="eu.baltrad.dex.log.DBLogAppender">
        <property name="logManager" ref="logManager"/>
    </bean>
          
    <!-- Registry controller -->
    <bean id="registryController" 
          class="eu.baltrad.dex.registry.controller.RegistryController"
          autowire="byType"/>
        
    <!-- Configure registry controller -->
    <bean id="registryConfigurationController"
          class="eu.baltrad.dex.config.controller.RegistryConfigurationController"
          autowire="byType"/>
    
    <!-- Configure registry validator -->
    <bean id="registryConfigurationValidator"
          class="eu.baltrad.dex.config.validator.RegistryConfigurationValidator"/>

    <!-- Save user account controller -->
    <bean id="saveAccountController" 
          class="eu.baltrad.dex.user.controller.SaveAccountController"
          autowire="byType"/>
          
    <!-- Edit user account controller -->
    <bean id="editAccountController" 
          class="eu.baltrad.dex.user.controller.EditAccountController"
          autowire="byType"/>      

    <!-- Remove user account controller -->
    <bean id="removeAccountController"
          class="eu.baltrad.dex.user.controller.RemoveAccountController"
          autowire="byType"/>

    <!-- Save user account validator -->
    <bean id="accountValidator" 
          class="eu.baltrad.dex.user.validator.AccountValidator"
          autowire="byType"/>

    <!-- Change password controller -->
    <bean id="changePasswordController"
          class="eu.baltrad.dex.user.controller.ChangePasswordController"
          autowire="byType"/>
    
    <!-- Change password validator -->
    <bean id="changePasswordValidator" 
          class="eu.baltrad.dex.user.validator.PasswordValidator"
          autowire="byType"/>
    
    <!-- Keystore manager -->
    <bean id="keystoreManager"
          class="eu.baltrad.dex.keystore.manager.impl.KeystoreManager"
          autowire="byType"/>  
    
    <!-- Keystore controller -->
    <bean id="keystoreController"
          class="eu.baltrad.dex.keystore.controller.KeystoreController"
          autowire="byType"/>

    <!-- Save radar controller -->
    <bean id="saveRadarController"
          class="eu.baltrad.dex.radar.controller.SaveRadarController"
          autowire="byType"/>
        
    <!-- Show radar controller -->
    <bean id="showRadarController" 
          class="eu.baltrad.dex.radar.controller.ShowRadarController"
          autowire="byType"/>
        
    <!-- Remove radar controller -->
    <bean id="removeRadarController"
          class="eu.baltrad.dex.radar.controller.RemoveRadarController"
          autowire="byType"/>

    <!-- Data source list controller -->
    <bean id="dataSourceListController" 
          class="eu.baltrad.dex.net.controller.DataSourceListController"
          autowire="byType"/>
          
    <!-- Data source list servlet -->
    <bean id="dataSourceListServlet" 
          class="eu.baltrad.dex.net.servlet.DataSourceListServlet"
          autowire="byType"/>
          
    <!-- URL address validator -->
    <bean id="urlValidator" class="eu.baltrad.dex.net.util.UrlValidatorUtil"/>
    
    <!-- JSON format utility -->
    <bean id="jsonUtil" class="eu.baltrad.dex.net.util.json.impl.JsonUtil"/>
    
    <!-- Post subscription controller -->
    <bean id="startSubscriptionController" 
          class="eu.baltrad.dex.net.controller.StartSubscriptionController"
          autowire="byType">
        <property name="filterManager">
            <ref bean="coreFilterManager"/>
        </property>
    </bean>
          
    <!-- Post subscription servlet -->
    <bean id="startSubscriptionServlet" 
          class="eu.baltrad.dex.net.servlet.StartSubscriptionServlet"
          autowire="byType"/>
          
    <!-- Get subscription controller -->
    <bean id="updateSubscriptionController" 
          class="eu.baltrad.dex.net.controller.UpdateSubscriptionController" 
          autowire="byType"/>
          
    <!-- Get subscription servlet -->
    <bean id="updateSubscriptionServlet" 
          class="eu.baltrad.dex.net.servlet.UpdateSubscriptionServlet"
          autowire="byType"/>
          
    <!-- Subscription manager -->
    <bean id="subscriptionManager" 
          class="eu.baltrad.dex.net.manager.impl.SubscriptionManager" 
          autowire="byType"/>
          
    <!-- Post file servlet -->
    <bean id="postFileServlet" 
          class="eu.baltrad.dex.net.servlet.PostFileServlet" 
          autowire="byType"/>
          
    <!-- Post message servlet -->
    <bean id="postMessageServlet" 
          class="eu.baltrad.dex.net.servlet.PostMessageServlet" 
          autowire="byType"/>
    
    <!-- Post key servlet -->
    <bean id="postKeyServlet" 
          class="eu.baltrad.dex.net.servlet.PostKeyServlet" 
          autowire="byType"/>      
          
    <!-- Incoming file namer -->      
    <bean id="incomingFileNamer" 
          class="eu.baltrad.dex.net.util.IncomingFileNamer"/>
    
    <!-- Metadata matcher -->
    <bean id="metadataMatcher" 
          class="eu.baltrad.bdb.oh5.MetadataMatcher"/>

    <!-- Message digest utility -->
    <bean id="messageDigestUtil" 
          class="eu.baltrad.dex.util.MessageDigestUtil"/>

    <!-- Application security manager -->
    <bean id="applicationSecurityManager" 
          class="eu.baltrad.dex.auth.manager.SecurityManager"/>

    <!-- Web validator -->      
    <bean id="webValidator" class="eu.baltrad.dex.util.WebValidator"/>
    
    <!-- Node configuration validator -->
    <bean id="nodeConfigurationValidator"
          class="eu.baltrad.dex.config.validator.NodeConfigurationValidator"
          autowire="byType"/>  

    <!-- Save configuration controller -->
    <bean id="nodeConfigurationController"
          class="eu.baltrad.dex.config.controller.NodeConfigurationController"
          autowire="byType"/>

    <!-- Data processor -->
    <bean id="bltDataProcessor"
          class="eu.baltrad.dex.db.util.BltDataProcessor"/>

    <!-- Data projector -->
    <bean id="bltDataProjector" 
          class="eu.baltrad.dex.db.util.BltDataProjector"/>

    <!-- Image preview controller -->
    <bean id="imagePreviewController"
          class="eu.baltrad.dex.db.controller.BltImagePreviewController"
          autowire="byType"/>

    <!-- DataSourceManager -->
    <bean id="dataSourceManager" 
          class="eu.baltrad.dex.datasource.manager.impl.DataSourceManager"
          autowire="byType"/>
          
    <!-- DataSourceValidator -->
    <bean id="dataSourceValidator" 
          class="eu.baltrad.dex.datasource.util.DataSourceValidator" 
          autowire="byType"/>      

    <!-- SaveDataSourceController -->
    <bean id="saveDataSourceController"
          class="eu.baltrad.dex.datasource.controller.SaveDataSourceController"
          autowire="byType"/>

    <!-- ShowDataSourcesController -->
    <bean id="showDataSourcesController"
          class="eu.baltrad.dex.datasource.controller.ShowDataSourcesController"
          autowire="byType"/>

    <!-- RemoveDataSourceController -->
    <bean id="removeDataSourceController" 
          class="eu.baltrad.dex.datasource.controller.RemoveDataSourceController"
          autowire="byType"/>

    <!-- Integrate beast into BaltradDex -->
    <bean id="propertyConfigurer" 
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>db.properties</value>
                <value>classpath:resources/dex.fc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close" 
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.pwd}"/>
    </bean>

    <bean id="jdbcTemplate" 
          class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
 
    <!-- Enable transaction management -->
    <bean id="txManager" 
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
  
    <!-- we want transactions on classes -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
    
    <bean id="anomalydetectormanager" class="eu.baltrad.beast.qc.AnomalyDetectorManager" autowire="byType"/>
    
    <bean id="xmlrpcgenerator" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcCommandGenerator"/>
  
    <bean id="xmlrpcadaptormanager" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcConfigurationManager" autowire="byType"/>
  
    <!-- Add the xml adaptor to the baltrad adaptor -->
    <bean id="adaptormanager" class="eu.baltrad.beast.adaptor.BltAdaptorManager" autowire="byType">
        <property name="types">
            <list>
                <ref bean="xmlrpcadaptormanager"/>
            </list>
        </property>
    </bean>
    
    <!-- rule property manager-->
    <bean id="rulepropertymanager" class="eu.baltrad.beast.rules.PropertyManager" autowire="byType"/>

    <!-- The log message repository -->
    <bean id="logmessagerepository" class="eu.baltrad.beast.log.message.LogMessageRepository" autowire="byType">
      <property name="filenames">
        <list>
          <value>classpath:beast-log-messages.xml</value>
        </list>
      </property>
    </bean>

    <!-- The beast reporter that will send error messages so that they are presented in dex system messages -->
    <bean id="alertreporter" class="eu.baltrad.beast.log.AlertMessageReporter" autowire="byType" /> 

    <!-- Create the router -->
    <bean id="groovymgr" class="eu.baltrad.beast.rules.groovy.GroovyRuleManager" autowire="byType"/>
    <bean id="bltcompositemgr" class="eu.baltrad.beast.rules.composite.CompositingRuleManager" autowire="byType"/>
    <bean id="bltgmapmgr" class="eu.baltrad.beast.rules.gmap.GoogleMapRuleManager" autowire="byType" />
    <bean id="bltvolumemgr" class="eu.baltrad.beast.rules.volume.VolumeRuleManager" autowire="byType"/>
    <bean id="distributionRuleManager" class="eu.baltrad.beast.rules.dist.DistributionRuleManager" autowire="byType"/>
    <bean id="bdbtrimagemgr" class="eu.baltrad.beast.rules.bdb.BdbTrimAgeRuleManager" autowire="byType"/>
    <bean id="bdbtrimcountmgr" class="eu.baltrad.beast.rules.bdb.BdbTrimCountRuleManager" autowire="byType"/>
    <bean id="bltacrrmgr" class="eu.baltrad.beast.rules.acrr.AcrrRuleManager" autowire="byType" />
    <bean id="bltgramgr" class="eu.baltrad.beast.rules.gra.GraRuleManager" autowire="byType" />
    <bean id="bltwrwpmgr" class="eu.baltrad.beast.rules.wrwp.WrwpRuleManager" autowire="byType" />
	<bean id="bltscansunmgr" class="eu.baltrad.beast.rules.scansun.ScansunRuleManager" autowire="byType" />
	
    <bean id="log4jalertmessagerule" class="eu.baltrad.beast.rules.system.Log4jAlertMessageRule" autowire="byType"/>
    <bean id="systemrules" class="eu.baltrad.beast.router.SystemRulesDefinition">
      <property name="rules">
        <list>
          <ref bean="log4jalertmessagerule"/>
        </list>
      </property>
    </bean>
  
    <bean id="router" class="eu.baltrad.beast.router.impl.BltRouter" autowire="byType">
        <property name="ruleManagers">
            <map>
                <entry key="groovy" value-ref="groovymgr"/>
                <entry key="blt_composite" value-ref="bltcompositemgr"/>
                <entry key="blt_gmap" value-ref="bltgmapmgr"/>
                <entry key="blt_volume" value-ref="bltvolumemgr"/>
                <entry key="bdb_trim_age" value-ref="bdbtrimagemgr"/>
                <entry key="bdb_trim_count" value-ref="bdbtrimcountmgr"/>
                <entry key="blt_acrr" value-ref="bltacrrmgr"/>
                <entry key="blt_gra" value-ref="bltgramgr"/>
                <entry key="blt_wrwp" value-ref="bltwrwpmgr"/>
                <entry key="blt_scansun" value-ref="bltscansunmgr"/>
                <entry key="distribution" value-ref="distributionRuleManager"/>
            </map>
        </property>
    </bean>
  
    <!-- Add the baltrad adaptor manager to the baltrad manager -->
    <bean id="bltmanager" class="eu.baltrad.beast.manager.BltMessageManager" autowire="byType"/>
    
    <!-- beastui uses Controller annotations -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

    <!-- We need to have a timeout manager so that we can initiate timeout requests from anywhere -->
    <bean id="timeoutfactory" class="eu.baltrad.beast.rules.timer.TimeoutTaskFactory"/>  
    <bean id="timeoutmanager" class="eu.baltrad.beast.rules.timer.TimeoutManager" autowire="byType"/>

    <bean id="cronutilities" class="eu.baltrad.beast.scheduler.CronEntryUtilities" autowire="byType"/>

    <!-- Nice to have a cron-like scheduler -->
    <bean id="beastscheduler" class="eu.baltrad.beast.scheduler.BeastScheduler" autowire="byType"/>

    <!-- and the file catalog -->
    <bean id="bdb_db" class="eu.baltrad.bdb.db.rest.RestfulDatabase" >
        <constructor-arg index="0" value="${database.uri}" />
        <constructor-arg index="1" value="20" />
    </bean>
    
    <bean id="bdb_storage" class="eu.baltrad.bdb.storage.CacheDirStorage">
        <constructor-arg index="0" value="${data.storage.folder}" />
        <constructor-arg index="1" value="1000" /> <!-- cache size -->
    </bean>
    <bean id="fileCatalog" class="eu.baltrad.bdb.BasicFileCatalog">
        <constructor-arg ref="bdb_db" />
        <constructor-arg ref="bdb_storage" />
    </bean>
    
    <!-- and the abstraction of the catalog -->
    <bean id="catalog" class="eu.baltrad.beast.db.Catalog" autowire="byType" />

    <!-- utilities when working with rules -->
    <bean id="ruleutil" class="eu.baltrad.beast.rules.util.RuleUtilities" autowire="byType"/>
    
    <!-- And we should have an application context to get hold of relevant managers -->
    <bean id="managercontext" class="eu.baltrad.beast.ManagerContext" autowire="byType" />

    <bean id="ruleFilterManager" class="eu.baltrad.beast.rules.RuleFilterManager" autowire="byType">
      <property name="filterManager">
        <ref bean="coreFilterManager"/>
      </property>
    </bean>
 
    <bean id="bdbConnectionStatusReporter" class="eu.baltrad.beast.system.BdbConnectionStatusReporter" autowire="byType" />
    <bean id="dbConnectionStatusReporter" class="eu.baltrad.beast.system.DbConnectionStatusReporter" autowire="byType" />
    <bean id="radarStatusReporter" class="eu.baltrad.beast.system.RadarConnectionStatusReporter" autowire="byType" />
    <bean id="bdbObjectStatusReporter" class="eu.baltrad.beast.system.BdbObjectStatusReporter" autowire="byType" />
 
    <bean id="hostManager" class="eu.baltrad.beast.system.host.HostFilterManager" autowire="byType"/>
 
    <bean id="supervisor" class="eu.baltrad.beast.system.SystemSupervisor">
      <property name="reporters">
        <map>
          <entry key="db.status" value-ref="dbConnectionStatusReporter"/>
          <entry key="bdb.status" value-ref="bdbConnectionStatusReporter"/>
          <entry key="radar.connection.status" value-ref="radarStatusReporter"/>
          <entry key="bdb.object.status" value-ref="bdbObjectStatusReporter"/>
        </map>     
      </property>
    </bean>
 
    <bean id="adaptorsController" class="eu.baltrad.beastui.web.controller.AdaptorsController" autowire="byType" />
    <bean id="anomalyDetectorsController" class="eu.baltrad.beastui.web.controller.AnomalyDetectorController" autowire="byType" />
    <bean id="groovyRoutesController" class="eu.baltrad.beastui.web.controller.GroovyRoutesController" autowire="byType" />
    <bean id="compositeRoutesController" class="eu.baltrad.beastui.web.controller.CompositeRoutesController" autowire="byType" />
    <bean id="gmapRoutesController" class="eu.baltrad.beastui.web.controller.GoogleMapRoutesController" autowire="byType" />
    <bean id="volumeRoutesController" class="eu.baltrad.beastui.web.controller.VolumeRoutesController" autowire="byType" />
    <bean id="acrrRoutesController" class="eu.baltrad.beastui.web.controller.AcrrRoutesController" autowire="byType" />
    <bean id="graRoutesController" class="eu.baltrad.beastui.web.controller.GraRoutesController" autowire="byType" />
    <bean id="wrwpRoutesController" class="eu.baltrad.beastui.web.controller.WrwpRoutesController" autowire="byType" />
    <bean id="scansunRoutesController" class="eu.baltrad.beastui.web.controller.ScansunRoutesController" autowire="byType" />
    <bean id="bdbTrimAgeRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimAgeRoutesController" autowire="byType" />
    <bean id="bdbTrimCountRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimCountRoutesController" autowire="byType" />
    <bean id="distributionRoutesController" class="eu.baltrad.beastui.web.controller.DistributionRoutesController" autowire="byType" />
    <bean id="showRoutesController" class="eu.baltrad.beastui.web.controller.ShowRoutesController" autowire="byType" />
    <bean id="filterController" class="eu.baltrad.beastui.web.controller.FilterController" autowire="byType" />
    
    <bean id="schedulerController" class="eu.baltrad.beastui.web.controller.SchedulerController" autowire="byType" />
    
    <bean id="supervisorController" class="eu.baltrad.beastui.web.controller.SupervisorController" autowire="byType" />

    <!-- Filter managers -->
    <bean id="attributeFilterManager" class="eu.baltrad.beast.db.AttributeFilterManager"
            autowire="byName"/>
    <bean id="combinedFilterManager" class="eu.baltrad.beast.db.CombinedFilterManager"
            autowire="byName">
        <property name="childManager"> 
            <ref bean="coreFilterManager"/>
        </property>        
    </bean>
    <bean id="alwaysMatchFilterManager" class="eu.baltrad.beast.db.AlwaysMatchFilterManager"
          autowire="byName"/>
    <bean id="coreFilterManager" class="eu.baltrad.beast.db.CoreFilterManager"
            autowire="byName">
        <property name="subManagers">
            <map>
                <entry key="attr" value-ref="attributeFilterManager"/>
                <entry key="combined" value-ref="combinedFilterManager"/>
                <entry key="always" value-ref="alwaysMatchFilterManager"/>
            </map>
        </property>
    </bean>

  <bean id="xmlmsgFactory" class="eu.baltrad.beast.parser.impl.XmlMessageFactory">
    <property name="registry">
      <map>
        <entry key="bltalert" value="eu.baltrad.beast.message.mo.BltAlertMessage"/>
        <entry key="bltcommand" value="eu.baltrad.beast.message.mo.BltCommandMessage"/>
        <entry key="bltgenerate" value="eu.baltrad.beast.message.mo.BltGenerateMessage"/>
        <entry key="blttriggerjob" value="eu.baltrad.beast.message.mo.BltTriggerJobMessage"/>
      </map>
    </property>
  </bean>

  <bean id="xmlmsgParser" class="eu.baltrad.beast.parser.impl.XmlMessageParser" autowire="byType"/>
</beans>
