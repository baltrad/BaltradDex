<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2009-2010 Institute of Meteorology and Water Management, IMGW

This file is part of the BaltradDex software.

BaltradDex is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

BaltradDex is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the BaltradDex software.  If not, see http://www.gnu.org/licenses.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!--
        URLs controlled by the role based USER level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="userHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="dsShow.htm">showDataSourcesController</prop>
                <prop key="dsFiles.htm">bltDataSourceController</prop>
                <prop key="fileDetails.htm">bltFileDetailsController</prop>
                <prop key="imagePreview.htm">bltImagePreviewController</prop>
                <prop key="dataDownload.htm">downloadStatusController</prop>
                <prop key="dataUpload.htm">uploadStatusController</prop>
                <prop key="home.htm">urlFilenameController</prop>
                <prop key="latestMessages.htm">urlFilenameController</prop>
                <prop key="logtable.htm">logTableController</prop>
                <prop key="allMessages.htm">journalController</prop>
                <prop key="browseFiles.htm">bltFileBrowserController</prop>
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based PEER level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="peerHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <!--prop key="connectToNode.htm">connectToNodeController</prop>
                <prop key="dsConnect.htm">remoteDataSourceController</prop>
                <prop key="dsToConnect.htm">remoteDataSourceController</prop>
                <prop key="dsSubscribed.htm">remoteDataSourceController</prop>
                <prop key="download.htm">bltFileDownloadController</prop>
                <prop key="showSubscriptions.htm">subscriptionController</prop>
                <prop key="showSelectedSubscriptions.htm">subscriptionController</prop>
                <prop key="showSubscriptionStatus.htm">subscriptionController</prop>
                <prop key="showRegister.htm">registerController</prop-->
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based OPERATOR level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="operatorHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="exchange.htm">urlFilenameController</prop>
                <prop key="processing.htm">urlFilenameController</prop>
                <prop key="connectToNode.htm">connectToNodeController</prop>
                <prop key="dsConnect.htm">remoteDataSourceController</prop>
                <prop key="dsToConnect.htm">remoteDataSourceController</prop>
                <prop key="dsSubscribed.htm">remoteDataSourceController</prop>
                <prop key="download.htm">bltFileDownloadController</prop>
                <prop key="showSubscriptions.htm">subscriptionController</prop>
                <prop key="showSelectedSubscriptions.htm">subscriptionController</prop>
                <prop key="showSubscriptionStatus.htm">subscriptionController</prop>
                <prop key="showRegister.htm">registerController</prop>
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based ADMIN level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="adminHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="settings.htm">urlFilenameController</prop>
                <prop key="nodeProperties.htm">saveConfigurationController</prop>
                <prop key="removeMessages.htm">urlFilenameController</prop>
                <prop key="configureMessages.htm">saveMessagesConfigurationController</prop>
                <prop key="messagesRemovalStatus.htm">removeMessagesController</prop>

                <prop key="configureRegistry.htm">saveRegistryConfigurationController</prop>
                <prop key="removeRegisterEntries.htm">registerController</prop>
                <prop key="registerEntriesRemovalStatus.htm">registerController</prop>

                <prop key="saveAccount.htm">saveUserController</prop>
                <prop key="editAccount.htm">editUserController</prop>
                <prop key="saveAccountStatus">urlFilenameController</prop>
                <prop key="removeAccount.htm">removeUserController</prop>
                <prop key="accountToRemove.htm">removeUserController</prop>
                <prop key="removeAccountStatus.htm">removeUserController</prop>
                <prop key="changePassword.htm">changePasswordController</prop>
                <prop key="changePasswordStatus">urlFilenameController</prop>

                <prop key="saveRadar.htm">saveRadarController</prop>
                <prop key="editRadar.htm">editRadarController</prop>
                <prop key="saveRadarStatus">urlFilenameController</prop>
                <prop key="removeRadar.htm">removeRadarController</prop>
                <prop key="radarToRemove.htm">removeRadarController</prop>
                <prop key="removeRadarStatus.htm">removeRadarController</prop>

                <prop key="dsSaveName.htm">saveDataSourceController</prop>
                <prop key="dsSaveRadars.htm">saveDataSourceController</prop>
                <prop key="dsSaveFileObjects.htm">saveDataSourceController</prop>
                <prop key="dsSaveUsers.htm">saveDataSourceController</prop>
                <prop key="dsSaveSummary.htm">saveDataSourceController</prop>
                <prop key="dsSave.htm">saveDataSourceController</prop>
                <prop key="dsSelectRemove.htm">removeDataSourceController</prop>
                <prop key="dsToRemove.htm">removeDataSourceController</prop>
                <prop key="dsRemove.htm">removeDataSourceController</prop>
                <prop key="dsSelectEdit.htm">editDataSourceController</prop>

                <prop key="removeDownloadSubscriptions.htm">subscriptionController</prop>
                <prop key="downloadSubscriptionsToRemove.htm">subscriptionController</prop>
                <prop key="downloadSubscriptionsRemovalStatus.htm">subscriptionController</prop>
                <prop key="removeUploadSubscriptions.htm">subscriptionController</prop>
                <prop key="uploadSubscriptionsToRemove.htm">subscriptionController</prop>
                <prop key="uploadSubscriptionsRemovalStatus.htm">subscriptionController</prop>

                <prop key="removeNodeConnections.htm">nodeConnectionController</prop>
                <prop key="nodeConnectionsToRemove.htm">nodeConnectionController</prop>
                <prop key="nodeConnectionsRemovalStatus.htm">nodeConnectionController</prop>
            </props>
        </property>
    </bean>

    <!--
        The following URLs are not intercepted by any of the http request interceptors.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="login.htm">loginController</prop>
                <prop key="logout.htm">logoutController</prop>
                <prop key="dispatch.htm">frameDispatcherController</prop>
            </props>
        </property>
    </bean>

    <!--
        USER level role based http request interceptor.
    -->
    <bean id="userHttpRequestInterceptor" class="eu.baltrad.dex.util.UserHttpRequestInterceptor"/>

    <!--
        PEER level role based http request interceptor.
    -->
    <bean id="peerHttpRequestInterceptor" class="eu.baltrad.dex.util.PeerHttpRequestInterceptor"/>

    <!--
        OPERATOR level role based http request interceptor.
    -->
    <bean id="operatorHttpRequestInterceptor" 
            class="eu.baltrad.dex.util.OperatorHttpRequestInterceptor"/>

    <!--
        ADMIN level role based http request interceptor.
    -->
    <bean id="adminHttpRequestInterceptor" class="eu.baltrad.dex.util.AdminHttpRequestInterceptor"/>

    <!--
        View resolver.
    -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp" />
    <!--
        URL filename view controller.
    -->
    <bean id="urlFilenameController"
          class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

    <!--
         Download status controller
    -->
    <bean id="downloadStatusController"
            class="eu.baltrad.dex.subscription.controller.DownloadStatusController">
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="successView">
            <value>dataDownload</value>
        </property>
    </bean>
    <!--
         Upload status controller
    -->
    <bean id="uploadStatusController"
            class="eu.baltrad.dex.subscription.controller.UploadStatusController">
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="successView">
            <value>dataUpload</value>
        </property>
    </bean>

    <!--
        The signin controller.
    -->
    <bean name="loginController" class="eu.baltrad.dex.auth.controller.LoginController">
        <property name="sessionForm">
            <value>true</value>
	</property>
	<property name="formView">
            <value>login</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="successView">
            <value>redirect:home.htm</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.user.model.User</value>
        </property>
        <property name="validator">
            <ref bean="loginValidator"/>
        </property>
    </bean>

    <!--
        Logout controller.
    -->
    <bean name="logoutController" class="eu.baltrad.dex.auth.controller.LogoutController">
        <property name="successView">
            <value>redirect:login.htm</value>
        </property>
     </bean>

    <!--
    The index controller.
    -->
    <!--bean name="indexController"
        class="org.springframework.web.servlet.mvc.ParameterizableViewController">
        <property name="viewName">
            <value>hello</value>
        </property>
    </bean -->

    <!--
        Data from data source controller.
    -->
    <bean name="bltDataSourceController"
        class="eu.baltrad.dex.bltdata.controller.BltDataSourceController">
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
        <property name="successView">
            <value>dsFiles</value>
        </property>
    </bean>

    <!--
        File details controller.
    -->
    <bean name="bltFileDetailsController"
        class="eu.baltrad.dex.bltdata.controller.BltFileDetailsController">
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
        <property name="bltDataProjector">
            <ref bean="bltDataProjector"/>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
	<property name="fileCatalog">
	    <ref bean="fileCatalog" />
	</property>
        <property name="successView">
            <value>fileDetails</value>
        </property>
    </bean>
    <!--
        File browser controller
    -->
    <bean name="bltFileBrowserController"
            class="eu.baltrad.dex.bltdata.controller.BltFileBrowserController">
        <property name="successView">
            <value>browseFiles</value>
        </property>
        <property name="formView">
            <value>browseFiles</value>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager"/>
        </property>
        <property name="fileObjectManager">
            <ref bean="fileObjectManager"/>
        </property>
    </bean>

    <!--
        File object manager
    -->
    <bean name="fileObjectManager" class="eu.baltrad.dex.datasource.model.FileObjectManager"/>

    <!--
        Subscription controller
    -->
    <bean name="subscriptionController"
        class="eu.baltrad.dex.subscription.controller.SubscriptionController">
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="dataSourceManager">
            <ref bean="dataSourceManager" />
        </property>
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
    </bean>

    <!--
        Log messages controller
    -->
    <bean name="logTableController" class="eu.baltrad.dex.log.controller.LogTableController">
        <property name="successView">
            <value>logtable</value>
        </property>
    </bean>

    <!--
        System journal controller
    -->
    <bean name="journalController" class="eu.baltrad.dex.log.controller.JournalController">
        <property name="successView">
            <value>allMessages</value>
        </property>
    </bean>

    <!--
        Data download controller.
    -->
    <bean name="bltFileDownloadController"
            class="eu.baltrad.dex.bltdata.controller.BltFileDownloadController">
        <property name="successView">
            <value>radarData</value>
        </property>
    </bean>

    <!--
        Application initializing utility.
    -->
    <bean id="initAppUtil" class="eu.baltrad.dex.util.InitAppUtil"/>

    <!--
        Radar manager.
    -->
    <bean name="radarManager" class="eu.baltrad.dex.radar.model.RadarManager"/>

    <!--
        Data source files manager
    -->
    <bean id="bltFileManager" class="eu.baltrad.dex.bltdata.model.BltFileManager">
        <property name="dataSourceManager">
            <ref bean="dataSourceManager"/>
        </property>
        <property name="coreFilterManager">
            <ref bean="coreFilterManager"/>
        </property>
	<property name="fileCatalog">
	    <ref bean="fileCatalog" />
	</property>
    </bean>

    <!--
        Subscription manager.
    -->
    <bean name="subscriptionManager" class="eu.baltrad.dex.subscription.model.SubscriptionManager"/>

    <!--
        Message logger
    -->
    <bean name="messageLogger" class="eu.baltrad.dex.log.model.MessageLogger"/>

    <!-- FramePublisherManager -->
    <bean name="framePublisherManager" class="eu.baltrad.dex.core.util.FramePublisherManager"/>

    <!-- FramePublisher -->
    <bean name="framePublisher" class="eu.baltrad.dex.core.util.FramePublisher"/>

    <!-- Frame dispatcher controller -->
    <bean name="frameDispatcherController"
        class="eu.baltrad.dex.core.controller.FrameDispatcherController">
        <property name="userManager">
            <ref bean="userManager" />
        </property>
        <property name="dataSourceManager">
            <ref bean="dataSourceManager" />
        </property>
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="bltMessageManager">
            <ref bean="bltmanager"/>
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
        <property name="framePublisherManager">
            <ref bean="framePublisherManager"/>
        </property>
        <property name="framePublisher">
            <ref bean="framePublisher"/>
        </property>
        <property name="deliveryRegisterManager">
            <ref bean="deliveryRegisterManager"/>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
        <property name="fileCatalog">
	    <ref bean="fileCatalog" />
	</property>
    </bean>

    <!--
        Sign in validator.
    -->
    <bean name="loginValidator" class="eu.baltrad.dex.auth.util.LoginValidator"/>

    <!--
        User manager.
    -->
    <bean name="userManager" class="eu.baltrad.dex.user.model.UserManager"/>

    <!--
        Delivery register manager
    -->
    <bean name="deliveryRegisterManager"
                        class="eu.baltrad.dex.registry.model.DeliveryRegisterManager"/>

    <!--
        Clear message table controller - deletes records from message table
    -->
    <bean name="removeMessagesController"
            class="eu.baltrad.dex.log.controller.RemoveMessagesController">
        <property name="successView">
            <value>messagesRemovalStatus</value>
        </property>
    </bean>
    <!--
        Configure messages controller
    -->
    <bean name="saveMessagesConfigurationController"
            class="eu.baltrad.dex.config.controller.SaveMessagesConfigurationController">
        <property name="successView">
            <value>redirect:configureMessages.htm</value>
        </property>
        <property name="formView">
            <value>configureMessages</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.config.model.LogConfiguration</value>
        </property>
        <property name="validator">
            <ref bean="saveMessagesConfigurationValidator"/>
        </property>
        <property name="configurationManager">
            <ref bean="configurationManager"/>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>
    <!--
        Configure messages validator
    -->
    <bean name="saveMessagesConfigurationValidator"
            class="eu.baltrad.dex.config.util.SaveMessagesConfigurationValidator"/>
    <!--
        Log manager
    -->
    <bean name="logManager" class="eu.baltrad.dex.log.model.LogManager"/>
    <!--
        Register controller - handles data delivery register
    -->
    <bean name="registerController" class="eu.baltrad.dex.registry.controller.RegisterController">
        <property name="successView">
            <value>showRegister</value>
        </property>
        <property name="deliveryRegisterManager">
            <ref bean="deliveryRegisterManager"/>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
    </bean>
    <!--
        Configure registry controller
    -->
    <bean name="saveRegistryConfigurationController"
            class="eu.baltrad.dex.config.controller.SaveRegistryConfigurationController">
        <property name="successView">
            <value>redirect:configureRegistry.htm</value>
        </property>
        <property name="formView">
            <value>configureRegistry</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.config.model.LogConfiguration</value>
        </property>
        <property name="validator">
            <ref bean="saveRegistryConfigurationValidator"/>
        </property>
        <property name="configurationManager">
            <ref bean="configurationManager"/>
        </property>
        <property name="deliveryRegisterManager">
            <ref bean="deliveryRegisterManager"/>
        </property>
    </bean>
    <!--
        Configure messages validator
    -->
    <bean name="saveRegistryConfigurationValidator"
            class="eu.baltrad.dex.config.util.SaveRegistryConfigurationValidator"/>
    <!--
        Edit user controller - allows to modify user credentials
    -->
    <bean name="editUserController" class="eu.baltrad.dex.user.controller.EditUserController">
        <property name="successView">
            <value>editAccount</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Add user controller - registers new user in the system
    -->
    <bean name="saveUserController" class="eu.baltrad.dex.user.controller.SaveUserController">
        <property name="successView">
            <value>saveAccountStatus</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.user.model.User</value>
        </property>
        <property name="formView">
            <value>saveAccount</value>
        </property>
        <property name="validator">
            <ref bean="saveUserValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Add user validator
    -->
    <bean name="saveUserValidator" class="eu.baltrad.dex.user.util.SaveUserValidator">
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Change password controller
    -->
    <bean name="changePasswordController"
            class="eu.baltrad.dex.user.controller.ChangePasswordController">
        <property name="successView">
            <value>changePasswordStatus</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.user.model.Password</value>
        </property>
        <property name="formView">
            <value>changePassword</value>
        </property>
        <property name="validator">
            <ref bean="changePasswordValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Change password validator
    -->
    <bean name="changePasswordValidator" class="eu.baltrad.dex.user.util.ChangePasswordValidator"/>

    <!--
        Remove user account controller extends MultiActionController
    -->
    <bean id="removeUserController"
        class="eu.baltrad.dex.user.controller.RemoveUserController">
        <property name="userManager">
            <ref bean="userManager" />
        </property>
    </bean>

    <!--
        Add radar controller
    -->
    <bean name="saveRadarController"
        class="eu.baltrad.dex.radar.controller.SaveRadarController">
        <property name="formView">
            <value>saveRadar</value>
        </property>
        <property name="successView">
            <value>saveRadarStatus</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.radar.model.Radar</value>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="radarManager">
            <ref bean="radarManager"/>
        </property>
        <property name="validator">
            <ref bean="saveRadarValidator"/>
        </property>     
    </bean>

    <!--
        Add radar validator
    -->
    <bean name="saveRadarValidator" class="eu.baltrad.dex.radar.util.SaveRadarValidator"/>

    <!--
        Edit radar controller
    -->
    <bean name="editRadarController" class="eu.baltrad.dex.radar.controller.EditRadarController">
        <property name="successView">
            <value>editRadar</value>
        </property>
        <property name="radarManager">
            <ref bean="radarManager"/>
        </property>
    </bean>

    <!--
        Remove radar controller
    -->
    <bean id="removeRadarController"
        class="eu.baltrad.dex.radar.controller.RemoveRadarController">
        <!--property name="nameResolver">
            <ref local="nameResolver"/>
        </property-->
        <property name="radarManager">
            <ref bean="radarManager" />
        </property>
    </bean>
    
    <!--
        Connect to node controller
    -->
    <bean id="connectToNodeController"
        class="eu.baltrad.dex.core.controller.ConnectToNodeController">
        <property name="commandClass">
            <value>eu.baltrad.dex.core.model.NodeConnection</value>
        </property>
        <property name="successView">
            <value>redirect:dsConnect.htm</value>
        </property>
        <property name="nodeConnectionManager">
            <ref bean="nodeConnectionManager" />
        </property>
        <property name="validator">
            <ref bean="connectToNodeValidator"/>
        </property>
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
    </bean>

    <!--
        Remote data source controller
    -->
    <bean id="remoteDataSourceController"
            class="eu.baltrad.dex.core.controller.RemoteDataSourceController">
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
    </bean>

    <!-- Node manager -->

    <bean name="nodeConnectionManager" class="eu.baltrad.dex.core.model.NodeConnectionManager"/>

    <!-- Connect to node validator -->
    <bean name="connectToNodeValidator" class="eu.baltrad.dex.core.util.NodeConnectionValidator"/>

    <!--
        Message digest utility.
    -->
    <bean name="messageDigestUtil" class="eu.baltrad.dex.util.MessageDigestUtil"/>

    <!--
        Application security manager.
    -->
    <bean name="applicationSecurityManager" class="eu.baltrad.dex.util.ApplicationSecurityManager"/>
    
    <!-- Configuration manager -->

    <bean name="configurationManager" class="eu.baltrad.dex.config.model.ConfigurationManager"/>

    <!--
        Save configuration validator
    -->
    <bean name="saveConfigurationValidator"
            class="eu.baltrad.dex.config.util.SaveConfigurationValidator">
    </bean>

    <!--
        Save configuration controller.
    -->
    <bean name="saveConfigurationController"
            class="eu.baltrad.dex.config.controller.SaveConfigurationController">
        <property name="configurationManager">
            <ref bean="configurationManager"/>
        </property>
        <property name="successView">
            <value>redirect:nodeProperties.htm</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.config.model.AppConfiguration</value>
        </property>
        <property name="validator">
            <ref bean="saveConfigurationValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="formView">
            <value>nodeProperties</value>
        </property>
    </bean>

    <!--
        Node connection controller.
    -->
    <bean name="nodeConnectionController"
        class="eu.baltrad.dex.core.controller.NodeConnectionController">
        <property name="nodeConnectionManager">
            <ref bean="nodeConnectionManager" />
        </property>
    </bean>

    <!--
        Data processor model.
    -->
    <bean name="bltDataProcessor"
        class="eu.baltrad.dex.bltdata.model.BltDataProcessor">
    </bean>

    <!--
        Data projector model.
    -->
    <bean name="bltDataProjector" class="eu.baltrad.dex.bltdata.model.BltDataProjector"/>

    <!--
        Data processor controller.
    -->
    <bean name="bltDataProcessorController"
            class="eu.baltrad.dex.bltdata.controller.BltDataProcessorController">
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
    </bean>

    <!--
        Image preview controller.
    -->
    <bean name="bltImagePreviewController"
            class="eu.baltrad.dex.bltdata.controller.BltImagePreviewController">
        <property name="successView">
            <value>imagePreview</value>
        </property>
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
	<property name="fileCatalog">
	    <ref bean="fileCatalog" />
	</property>
    </bean>

    <!-- DataSourceManager -->
    <bean name="dataSourceManager" class="eu.baltrad.dex.datasource.model.DataSourceManager"/>

    <!-- SaveDataSourceController -->
    <bean name="saveDataSourceController"
            class="eu.baltrad.dex.datasource.controller.SaveDataSourceController">
        <property name="coreFilterManager">
            <ref bean="coreFilterManager"/>
        </property>
    </bean>

    <!-- ShowDataSourcesController -->
    <bean name="showDataSourcesController"
            class="eu.baltrad.dex.datasource.controller.ShowDataSourcesController">
        <property name="successView">
            <value>dsShow</value>
        </property>
        <property name="dataSourceManager">
            <ref bean="dataSourceManager"/>
        </property>
    </bean>

    <!-- RemoveDataSourceController -->
    <bean name="removeDataSourceController" 
            class="eu.baltrad.dex.datasource.controller.RemoveDataSourceController">
        <property name="dataSourceManager">
            <ref bean="dataSourceManager"/>
        </property>
        <property name="coreFilterManager">
            <ref bean="coreFilterManager"/>
        </property>
    </bean>

    <!-- EditDataSourcesController -->
    <bean name="editDataSourceController"
            class="eu.baltrad.dex.datasource.controller.EditDataSourceController">
        <property name="successView">
            <value>dsSelectEdit</value>
        </property>
        <property name="dataSourceManager">
            <ref bean="dataSourceManager"/>
        </property>
    </bean>

    <!--
        Message resources.
    -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basenames">
            <list>
		<value>messages</value>
            </list>
	</property>
    </bean>

    <!-- Integrate beast into BaltradDex -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>db.properties</value>
                <value>classpath:eu/baltrad/dex/util/dex.fc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.pwd}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
 
    <!-- Enable transaction management -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
  
    <!-- we want transactions on classes -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
    
    <bean id="anomalydetectormanager" class="eu.baltrad.beast.qc.AnomalyDetectorManager" autowire="byType"/>
    
    <bean id="xmlrpcgenerator" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcCommandGenerator"/>
  
    <bean id="xmlrpcadaptormanager" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcConfigurationManager" autowire="byType"/>
  
    <!-- Add the xml adaptor to the baltrad adaptor -->
    <bean id="adaptormanager" class="eu.baltrad.beast.adaptor.BltAdaptorManager" autowire="byType">
        <property name="types">
            <list>
                <ref bean="xmlrpcadaptormanager"/>
            </list>
        </property>
    </bean>
    
    <!-- rule property manager-->
    <bean id="rulepropertymanager" class="eu.baltrad.beast.rules.PropertyManager" autowire="byType"/>

    <!-- Create the router -->
    <bean id="groovymgr" class="eu.baltrad.beast.rules.groovy.GroovyRuleManager" autowire="byType"/>
    <bean id="bltcompositemgr" class="eu.baltrad.beast.rules.composite.CompositingRuleManager" autowire="byType"/>
    <bean id="bltvolumemgr" class="eu.baltrad.beast.rules.volume.VolumeRuleManager" autowire="byType"/>
    <bean id="distributionRuleManager" class="eu.baltrad.beast.rules.dist.DistributionRuleManager" autowire="byType"/>
    <bean id="bdbtrimagemgr" class="eu.baltrad.beast.rules.bdb.BdbTrimAgeRuleManager" autowire="byType"/>
    <bean id="bdbtrimcountmgr" class="eu.baltrad.beast.rules.bdb.BdbTrimCountRuleManager" autowire="byType"/>

  
    <bean id="router" class="eu.baltrad.beast.router.impl.BltRouter" autowire="byType">
        <property name="ruleManagers">
            <map>
                <entry key="groovy" value-ref="groovymgr"/>
                <entry key="blt_composite" value-ref="bltcompositemgr"/>
                <entry key="blt_volume" value-ref="bltvolumemgr"/>
                <entry key="bdb_trim_age" value-ref="bdbtrimagemgr"/>
                <entry key="bdb_trim_count" value-ref="bdbtrimcountmgr"/>
		<entry key="distribution" value-ref="distributionRuleManager"/>
            </map>
        </property>
    </bean>
  
    <!-- Add the baltrad adaptor manager to the baltrad manager -->
    <bean id="bltmanager" class="eu.baltrad.beast.manager.BltMessageManager" autowire="byType"/>
    
    <!-- beastui uses Controller annotations -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="operatorHttpRequestInterceptor"/>
            </list>
        </property>
    </bean>

    <!-- We need to have a timeout manager so that we can initiate timeout requests from anywhere -->
    <bean id="timeoutfactory" class="eu.baltrad.beast.rules.timer.TimeoutTaskFactory"/>  
    <bean id="timeoutmanager" class="eu.baltrad.beast.rules.timer.TimeoutManager" autowire="byType"/>

    <bean id="cronutilities" class="eu.baltrad.beast.scheduler.CronEntryUtilities" autowire="byType"/>

    <!-- Nice to have a cron-like scheduler -->
    <bean id="beastscheduler" class="eu.baltrad.beast.scheduler.BeastScheduler" autowire="byType"/>

    <!-- and the file catalog -->
    <bean id="bdb_db" class="eu.baltrad.fc.Database" factory-method="create" destroy-method="delete">
        <constructor-arg value="${database.uri}" />
    </bean>
    <bean id="bdb_storage" class="eu.baltrad.fc.CacheDirStorage" init-method="init" destroy-method="delete">
        <constructor-arg index="0" value="${data.storage.folder}" />
        <constructor-arg index="1" value="1000" /> <!-- cache size -->
    </bean>
    <bean id="fileCatalog" class="eu.baltrad.fc.FileCatalog" destroy-method="delete">
        <constructor-arg ref="bdb_db" />
        <constructor-arg ref="bdb_storage" />
    </bean>
    
    <!-- and the abstraction of the catalog -->
    <bean id="catalog" class="eu.baltrad.beast.db.Catalog" autowire="byType" />

    <!-- utilities when working with rules -->
    <bean id="ruleutil" class="eu.baltrad.beast.rules.util.RuleUtilities" autowire="byType"/>
    
    <!-- And we should have an application context to get hold of relevant managers -->
    <bean id="managercontext" class="eu.baltrad.beast.ManagerContext" autowire="byType" />

    <bean id="ruleFilterManager" class="eu.baltrad.beast.rules.RuleFilterManager" autowire="byType">
      <property name="filterManager">
        <ref bean="coreFilterManager"/>
      </property>
    </bean>
 
    <bean id="adaptorsController" class="eu.baltrad.beastui.web.controller.AdaptorsController" autowire="byType" />
    <bean id="anomalyDetectorsController" class="eu.baltrad.beastui.web.controller.AnomalyDetectorController" autowire="byType" />
    <bean id="groovyRoutesController" class="eu.baltrad.beastui.web.controller.GroovyRoutesController" autowire="byType" />
    <bean id="compositeRoutesController" class="eu.baltrad.beastui.web.controller.CompositeRoutesController" autowire="byType" />
    <bean id="volumeRoutesController" class="eu.baltrad.beastui.web.controller.VolumeRoutesController" autowire="byType" />
    <bean id="bdbTrimAgeRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimAgeRoutesController" autowire="byType" />
    <bean id="bdbTrimCountRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimCountRoutesController" autowire="byType" />
    <bean id="distributionRoutesController" class="eu.baltrad.beastui.web.controller.DistributionRoutesController" autowire="byType" />
    <bean id="showRoutesController" class="eu.baltrad.beastui.web.controller.ShowRoutesController" autowire="byType" />
    <bean id="filterController" class="eu.baltrad.beastui.web.controller.FilterController" autowire="byType" />
    
    <bean id="schedulerController" class="eu.baltrad.beastui.web.controller.SchedulerController" autowire="byType" />

    <!-- Filter managers -->
    <bean id="attributeFilterManager" class="eu.baltrad.beast.db.AttributeFilterManager"
            autowire="byName"/>
    <bean id="combinedFilterManager" class="eu.baltrad.beast.db.CombinedFilterManager"
            autowire=" byName">
        <property name="childManager"> 
            <ref bean="coreFilterManager"/>
        </property>        
    </bean>
    <bean id="coreFilterManager" class="eu.baltrad.beast.db.CoreFilterManager"
            autowire="byName">
        <property name="subManagers">
            <map>
                <entry key="attr" value-ref="attributeFilterManager"/>
                <entry key="combined" value-ref="combinedFilterManager"/>
            </map>
        </property>
    </bean>

</beans>
