<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2009-2010 Institute of Meteorology and Water Management, IMGW

This file is part of the BaltradDex software.

BaltradDex is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

BaltradDex is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the BaltradDex software.  If not, see http://www.gnu.org/licenses.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!--
        URLs controlled by the role based USER level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="userHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="home.htm">statusController</prop>
                <prop key="radars.htm">channelController</prop>
                <prop key="radarData.htm">bltRadarDataController</prop>
                <prop key="fileDetails.htm">bltFileDetailsController</prop>
                <prop key="credits.htm">urlFilenameController</prop>
                <prop key="imagePreview.htm">bltImagePreviewController</prop>
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based PEER level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="peerHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="connectToNode.htm">connectToNodeController</prop>
                <prop key="remoteRadars.htm">remoteChannelController</prop>
                <prop key="selectedRemoteRadars.htm">remoteChannelController</prop>
                <prop key="subscribedRemoteRadars.htm">remoteChannelController</prop>
                <prop key="download.htm">bltFileDownloadController</prop>
                <prop key="showSubscriptions.htm">subscriptionController</prop>
                <prop key="showSelectedSubscriptions.htm">subscriptionController</prop>
                <prop key="showSubscriptionStatus.htm">subscriptionController</prop>
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based OPERATOR level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="operatorHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="log.htm">urlFilenameController</prop>
                <prop key="logtable.htm">logTableController</prop>
                <prop key="journal.htm">journalController</prop>
            </props>
        </property>
    </bean>

    <!--
        URLs controlled by the role based ADMIN level http request interceptor.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="adminHttpRequestInterceptor"/>
            </list>
        </property>
        <property name="mappings">
            <props>
                <prop key="configuration.htm">urlFilenameController</prop>
                <prop key="nodeProperties.htm">saveConfigurationController</prop>
                <prop key="clearmessages.htm">urlFilenameController</prop>
                <prop key="confirmclearmessages.htm">clrMsgsController</prop>

                <prop key="showRegister.htm">registerController</prop>
                <prop key="clearRegister.htm">registerController</prop>
                <prop key="showClearRegisterStatus.htm">registerController</prop>

                <prop key="saveUser.htm">saveUserController</prop>
                <prop key="editUser.htm">editUserController</prop>
                <prop key="showUsers.htm">removeUserController</prop>
                <prop key="saveUserStatus">urlFilenameController</prop>
                <prop key="showSelectedUsers.htm">removeUserController</prop>
                <prop key="showRemovedUsers.htm">removeUserController</prop>

                <prop key="saveLocalChannel.htm">saveChannelController</prop>
                <prop key="editLocalChannel.htm">editChannelController</prop>
                <prop key="showLocalChannels.htm">removeChannelController</prop>
                <prop key="saveRadarStatus">urlFilenameController</prop>
                <prop key="showSelectedLocalChannels.htm">removeChannelController</prop>
                <prop key="showRemovedLocalChannels.htm">removeChannelController</prop>

                <prop key="selectRemoveSubscriptions.htm">subscriptionController</prop>
                <prop key="showRemovedSubscriptions.htm">subscriptionController</prop>
                <prop key="showSubscriptionRemovalStatus.htm">subscriptionController</prop>
                <prop key="showPeersSubscriptions.htm">subscriptionController</prop>
                <prop key="showSelectedPeersSubscriptions.htm">subscriptionController</prop>
                <prop key="showRemovedPeersSubscriptions.htm">subscriptionController</prop>

                <prop key="showNodeConnections.htm">nodeConnectionController</prop>
                <prop key="showSelectedNodeConnections.htm">nodeConnectionController</prop>
                <prop key="showRemovedNodeConnections.htm">nodeConnectionController</prop>

                <prop key="setPermission.htm">setPermissionController</prop>
            </props>
        </property>
    </bean>

    <!--
        The following URLs are not intercepted by any of the http request interceptors.
    -->
    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="login.htm">loginController</prop>
                <prop key="logout.htm">logoutController</prop>
                <prop key="dispatch.htm">frameDispatcherController</prop>
            </props>
        </property>
    </bean>

    <!--
        USER level role based http request interceptor.
    -->
    <bean id="userHttpRequestInterceptor" class="eu.baltrad.dex.util.UserHttpRequestInterceptor"/>

    <!--
        PEER level role based http request interceptor.
    -->
    <bean id="peerHttpRequestInterceptor" class="eu.baltrad.dex.util.PeerHttpRequestInterceptor"/>

    <!--
        OPERATOR level role based http request interceptor.
    -->
    <bean id="operatorHttpRequestInterceptor" 
            class="eu.baltrad.dex.util.OperatorHttpRequestInterceptor"/>

    <!--
        ADMIN level role based http request interceptor.
    -->
    <bean id="adminHttpRequestInterceptor" class="eu.baltrad.dex.util.AdminHttpRequestInterceptor"/>

    <!--
        View resolver.
    -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/jsp/"
          p:suffix=".jsp" />

    <!--
        Name resolver to be used with classes extending MultiActionController
    -->
    <bean id="nameResolver"
        class="org.springframework.web.servlet.mvc.multiaction.PropertiesMethodNameResolver">
        <property name="mappings">
            <props>
                <prop key="showChannels">showChannels</prop>
                <prop key="showSelectedChannels">showSelectedChannels</prop>
                <prop key="showRemovedChannels">showRemovedChannels</prop>
                <prop key="showUsers">showUsers</prop>
                <prop key="showSelectedUsers">showSelectedUsers</prop>
                <prop key="showRemovedUsers">showRemovedUsers</prop>
                <prop key="showSubscriptions">showSubscriptions</prop>
                <prop key="showSelectedSubscriptions">showSelectedSubscriptions</prop>
                <prop key="showSubscriptionStatus">showSubscriptionStatus</prop>
            </props>
        </property>
    </bean>

    <!--
        URL filename view controller.
    -->
    <bean id="urlFilenameController"
          class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

    <!--
        Status / home page controller
    -->
    <bean id="statusController" class="eu.baltrad.dex.subscription.controller.StatusController">
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="successView">
            <value>home</value>
        </property>
    </bean>

    <!--
        The signin controller.
    -->
    <bean name="loginController" class="eu.baltrad.dex.auth.controller.LoginController">
        <property name="sessionForm">
            <value>true</value>
	</property>
	<property name="formView">
            <value>login</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="successView">
            <value>redirect:home.htm</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.user.model.User</value>
        </property>
        <property name="validator">
            <ref bean="loginValidator"/>
        </property>
    </bean>

    <!--
        Logout controller.
    -->
    <bean name="logoutController" class="eu.baltrad.dex.auth.controller.LogoutController">
        <property name="successView">
            <value>redirect:login.htm</value>
        </property>
     </bean>

    <!--
    The index controller.
    -->
    <!--bean name="indexController"
        class="org.springframework.web.servlet.mvc.ParameterizableViewController">
        <property name="viewName">
            <value>hello</value>
        </property>
    </bean -->

    <!--
        Data channels list controller.
    -->
    <bean name="channelController"
        class="eu.baltrad.dex.channel.controller.ChannelController">
        <property name="channelManager">
            <ref bean="channelManager" />
        </property>
        <property name="successView">
            <value>radars</value>
        </property>
    </bean>

    <!--
        Data from data channel controller.
    -->
    <bean name="bltRadarDataController"
        class="eu.baltrad.dex.bltdata.controller.BltRadarDataController">
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
        <property name="successView">
            <value>radarData</value>
        </property>
    </bean>

    <!--
        Data from data channel controller.
    -->
    <bean name="bltFileDetailsController"
        class="eu.baltrad.dex.bltdata.controller.BltFileDetailsController">
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
        <property name="bltDataProjector">
            <ref bean="bltDataProjector"/>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
        <property name="successView">
            <value>fileDetails</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Subscription controller
    -->
    <bean name="subscriptionController"
        class="eu.baltrad.dex.subscription.controller.SubscriptionController">
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="channelManager">
            <ref bean="channelManager" />
        </property>
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Log messages controller
    -->
    <bean name="logTableController" class="eu.baltrad.dex.log.controller.LogTableController">
        <property name="successView">
            <value>logtable</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        System journal controller
    -->
    <bean name="journalController" class="eu.baltrad.dex.log.controller.JournalController">
        <property name="successView">
            <value>journal</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Data download controller.
    -->
    <bean name="bltFileDownloadController"
            class="eu.baltrad.dex.bltdata.controller.BltFileDownloadController">
        <property name="successView">
            <value>radarData</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
	</property>
    </bean>

    <!--
        Application initializing utility.
    -->
    <bean id="initAppUtil" class="eu.baltrad.dex.util.InitAppUtil"/>

    <!--
        File catalog connector.
    -->
    <bean id="fileCatalogConnector" class="eu.baltrad.dex.util.FileCatalogConnector"/>

    <!--
        Data channel manager.
    -->
    <bean name="channelManager" class="eu.baltrad.dex.channel.model.ChannelManager"/>

    <!--
        Data manager.
    -->
    <bean name="bltFileManager" class="eu.baltrad.dex.bltdata.model.BltFileManager"/>

    <!--
        Subscription manager.
    -->
    <bean name="subscriptionManager" class="eu.baltrad.dex.subscription.model.SubscriptionManager"/>

    <!--
        Log manager
    -->
    <bean name="logManager" class="eu.baltrad.dex.log.model.LogManager">
        <property name="jdbcConnector">
            <ref bean="jdbcConnector"/>
        </property>
    </bean>

    <!-- FramePublisherManager -->
    <bean name="framePublisherManager" class="eu.baltrad.dex.core.util.FramePublisherManager"/>

    <!-- FramePublisher -->
    <bean name="framePublisher" class="eu.baltrad.dex.core.util.FramePublisher"/>

    <!-- Frame dispatcher controller -->
    <bean name="frameDispatcherController"
        class="eu.baltrad.dex.core.controller.FrameDispatcherController">
        <property name="userManager">
            <ref bean="userManager" />
        </property>
        <property name="channelManager">
            <ref bean="channelManager" />
        </property>
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
        <property name="bltMessageManager">
            <ref bean="bltmanager"/>
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
        <property name="framePublisherManager">
            <ref bean="framePublisherManager"/>
        </property>
        <property name="framePublisher">
            <ref bean="framePublisher"/>
        </property>
        <property name="deliveryRegisterManager">
            <ref bean="deliveryRegisterManager"/>
        </property>
    </bean>

    <!--
        Sign in validator.
    -->
    <bean name="loginValidator" class="eu.baltrad.dex.auth.util.LoginValidator"/>

    <!--
        User manager.
    -->
    <bean name="userManager" class="eu.baltrad.dex.user.model.UserManager"/>

    <!--
        Delivery register manager
    -->
    <bean name="deliveryRegisterManager"
                        class="eu.baltrad.dex.register.model.DeliveryRegisterManager"/>

    <!--
        Clear message table controller - deletes records from message table
    -->
    <bean name="clrMsgsController" class="eu.baltrad.dex.log.controller.ClrMsgsController">
        <property name="successView">
            <value>confirmclearmessages</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Register controller - handles data delivery register
    -->
    <bean name="registerController" class="eu.baltrad.dex.register.controller.RegisterController">
        <property name="successView">
            <value>showregister</value>
        </property>
        <property name="deliveryRegisterManager">
            <ref bean="deliveryRegisterManager"/>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="bltFileManager">
            <ref bean="bltFileManager" />
        </property>
    </bean>

    <!--
        Edit user controller - allows to modify user credentials
    -->
    <bean name="editUserController" class="eu.baltrad.dex.user.controller.EditUserController">
        <property name="successView">
            <value>editUser</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Add user controller - registers new user in the system
    -->
    <bean name="saveUserController" class="eu.baltrad.dex.user.controller.SaveUserController">
        <property name="successView">
            <value>saveUserStatus</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.user.model.User</value>
        </property>
        <property name="formView">
            <value>saveUser</value>
        </property>
        <property name="validator">
            <ref bean="saveUserValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Add user validator
    -->
    <bean name="saveUserValidator" class="eu.baltrad.dex.user.util.SaveUserValidator">
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
    </bean>

    <!--
        Remove user account controller extends MultiActionController
    -->
    <bean id="removeUserController"
        class="eu.baltrad.dex.user.controller.RemoveUserController">
        <property name="nameResolver">
            <ref local="nameResolver"/>
        </property>
        <property name="userManager">
            <ref bean="userManager" />
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Add channel controller - registers new data channel in the system
    -->
    <bean name="saveChannelController" 
        class="eu.baltrad.dex.channel.controller.SaveChannelController">
        <property name="successView">
            <value>saveRadarStatus</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.channel.model.Channel</value>
        </property>
        <property name="formView">
            <value>saveLocalChannel</value>
        </property>
        <property name="validator">
            <ref bean="saveChannelValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="channelManager">
            <ref bean="channelManager"/>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Add channel validator
    -->
    <bean name="saveChannelValidator" class="eu.baltrad.dex.channel.util.SaveChannelValidator">
        <property name="channelManager">
            <ref bean="channelManager"/>
        </property>
    </bean>

    <!--
        Edit channel controller - allows to modify data channel
    -->
    <bean name="editChannelController" class="eu.baltrad.dex.channel.controller.EditChannelController">
        <property name="successView">
            <value>editLocalChannel</value>
        </property>
        <property name="channelManager">
            <ref bean="channelManager"/>
        </property>
    </bean>

    <!--
        Remove channels controller extends MultiActionController
    -->
    <bean id="removeChannelController"
        class="eu.baltrad.dex.channel.controller.RemoveChannelController">
        <property name="nameResolver">
            <ref local="nameResolver"/>
        </property>
        <property name="channelManager">
            <ref bean="channelManager" />
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Set channel permission controller
    -->
    <bean id="setPermissionController"
        class="eu.baltrad.dex.channel.controller.SetPermissionController">
        <property name="successView">
            <value>redirect:editLocalChannel.htm</value>
        </property>
        <property name="formView">
            <value>setPermission</value>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.channel.model.Channel</value>
        </property>
        <property name="userManager">
            <ref bean="userManager"/>
        </property>
        <property name="channelManager">
            <ref bean="channelManager" />
        </property>
    </bean>
    
    <!--
        Connect to node controller
    -->
    <bean id="connectToNodeController"
        class="eu.baltrad.dex.core.controller.ConnectToNodeController">
        <property name="commandClass">
            <value>eu.baltrad.dex.core.model.NodeConnection</value>
        </property>
        <property name="successView">
            <value>redirect:remoteRadars.htm</value>
        </property>
        <property name="nodeConnectionManager">
            <ref bean="nodeConnectionManager" />
        </property>
        <property name="validator">
            <ref bean="connectToNodeValidator"/>
        </property>
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
    </bean>

    <!--
        Remote channel controller
    -->
    <bean id="remoteChannelController"
        class="eu.baltrad.dex.core.controller.RemoteChannelController">
        <property name="frameDispatcherController">
            <ref bean="frameDispatcherController"/>
        </property>
        <property name="subscriptionManager">
            <ref bean="subscriptionManager"/>
        </property>
         <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>


    <!-- Node manager -->

    <bean name="nodeConnectionManager" class="eu.baltrad.dex.core.model.NodeConnectionManager"/>

    <!-- Connect to node validator -->
    <bean name="connectToNodeValidator" class="eu.baltrad.dex.core.util.NodeConnectionValidator"/>

    <!--
        Message digest utility.
    -->
    <bean name="messageDigestUtil" class="eu.baltrad.dex.util.MessageDigestUtil"/>

    <!--
        Application security manager.
    -->
    <bean name="applicationSecurityManager" class="eu.baltrad.dex.util.ApplicationSecurityManager"/>
    
    <!-- Configuration manager -->

    <bean name="configurationManager" class="eu.baltrad.dex.config.model.ConfigurationManager"/>

    <!--
        Add channel validator
    -->
    <bean name="saveConfigurationValidator"
            class="eu.baltrad.dex.config.util.SaveConfigurationValidator">
    </bean>

    <!--
        Save configuration controller.
    -->
    <bean name="saveConfigurationController"
            class="eu.baltrad.dex.config.controller.SaveConfigurationController">
        <property name="configurationManager">
            <ref bean="configurationManager"/>
        </property>
        <property name="successView">
            <value>redirect:nodeProperties.htm</value>
        </property>
        <property name="commandClass">
            <value>eu.baltrad.dex.config.model.Configuration</value>
        </property>
        <property name="validator">
            <ref bean="saveConfigurationValidator"/>
        </property>
        <property name="sessionForm">
            <value>false</value>
        </property>
        <property name="formView">
            <value>nodeProperties</value>
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Node connection controller.
    -->
    <bean name="nodeConnectionController"
        class="eu.baltrad.dex.core.controller.NodeConnectionController">
        <property name="nodeConnectionManager">
            <ref bean="nodeConnectionManager" />
        </property>
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Data processor model.
    -->
    <bean name="bltDataProcessor"
        class="eu.baltrad.dex.bltdata.model.BltDataProcessor">
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Data projector model.
    -->
    <bean name="bltDataProjector"
        class="eu.baltrad.dex.bltdata.model.BltDataProjector">
        <property name="logManager">
            <ref bean="logManager"/>
        </property>
    </bean>

    <!--
        Data processor controller.
    -->
    <bean name="bltDataProcessorController"
            class="eu.baltrad.dex.bltdata.controller.BltDataProcessorController">
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
    </bean>

    <!--
        Image preview controller.
    -->
    <bean name="bltImagePreviewController"
            class="eu.baltrad.dex.bltdata.controller.BltImagePreviewController">
        <property name="successView">
            <value>imagePreview</value>
        </property>
        <property name="bltDataProcessor">
            <ref bean="bltDataProcessor"/>
        </property>
        <property name="bltDataProcessorController">
            <ref bean="bltDataProcessorController"/>
        </property>
    </bean>

    <!--
        JDBC connector.
    -->
    <bean name="jdbcConnector" class="eu.baltrad.dex.util.JDBCConnector"/>

    <!--
        Message resources.
    -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basenames">
            <list>
		<value>messages</value>
            </list>
	</property>
    </bean>

    <!-- Integrate beast into BaltradDex -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>db.properties</value>
                <value>classpath:eu/baltrad/dex/util/dex.fc.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.user}"/>
        <property name="password" value="${db.pwd}"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
 
    <!-- Enable transaction management -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
  
    <!-- we want transactions on classes -->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
    
    <bean id="xmlrpcgenerator" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcCommandGenerator"/>
  
    <bean id="xmlrpcadaptormanager" class="eu.baltrad.beast.adaptor.xmlrpc.XmlRpcConfigurationManager" autowire="byType"/>
  
    <!-- Add the xml adaptor to the baltrad adaptor -->
    <bean id="adaptormanager" class="eu.baltrad.beast.adaptor.BltAdaptorManager" autowire="byType">
        <property name="types">
            <list>
                <ref bean="xmlrpcadaptormanager"/>
            </list>
        </property>
    </bean>
    
    <!-- rule property manager-->
    <bean id="rulepropertymanager" class="eu.baltrad.beast.rules.PropertyManager" autowire="byType"/>

    <!-- Create the router -->
    <bean id="groovymgr" class="eu.baltrad.beast.rules.groovy.GroovyRuleManager" autowire="byType"/>
    <bean id="bltcompositemgr" class="eu.baltrad.beast.rules.composite.CompositingRuleManager" autowire="byType"/>
    <bean id="bltvolumemgr" class="eu.baltrad.beast.rules.volume.VolumeRuleManager" autowire="byType"/>
    <bean id="bdbtrimagemgr" class="eu.baltrad.beast.rules.bdb.BdbTrimAgeRuleManager" autowire="byType"/>
    <bean id="bdbtrimcountmgr" class="eu.baltrad.beast.rules.bdb.BdbTrimCountRuleManager" autowire="byType"/>

  
    <bean id="router" class="eu.baltrad.beast.router.impl.BltRouter" autowire="byType">
        <property name="ruleManagers">
            <map>
                <entry key="groovy" value-ref="groovymgr"/>
                <entry key="blt_composite" value-ref="bltcompositemgr"/>
                <entry key="blt_volume" value-ref="bltvolumemgr"/>
                <entry key="bdb_trim_age" value-ref="bdbtrimagemgr"/>
                <entry key="bdb_trim_count" value-ref="bdbtrimcountmgr"/>
            </map>
        </property>
    </bean>
  
    <!-- Add the baltrad adaptor manager to the baltrad manager -->
    <bean id="bltmanager" class="eu.baltrad.beast.manager.BltMessageManager" autowire="byType"/>
    
    <!-- beastui uses Controller annotations -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="operatorHttpRequestInterceptor"/>
            </list>
        </property>
    </bean>

    <!-- We need to have a timeout manager so that we can initiate timeout requests from anywhere -->
    <bean id="timeoutfactory" class="eu.baltrad.beast.rules.timer.TimeoutTaskFactory"/>  
    <bean id="timeoutmanager" class="eu.baltrad.beast.rules.timer.TimeoutManager" autowire="byType"/>

    <bean id="cronutilities" class="eu.baltrad.beast.scheduler.CronEntryUtilities" autowire="byType"/>

    <!-- Nice to have a cron-like scheduler -->
    <bean id="beastscheduler" class="eu.baltrad.beast.scheduler.BeastScheduler" autowire="byType"/>

    <!-- and the file catalog -->
    <bean id="bdb_db" class="eu.baltrad.fc.db.Database" factory-method="create">
        <constructor-arg value="${database.uri}" />
    </bean>
    <bean id="bdb_storage" class="eu.baltrad.fc.CacheDirStorage">
        <constructor-arg value="${data.storage.folder}" />
    </bean>
    <bean id="fc" class="eu.baltrad.fc.FileCatalog">
        <constructor-arg ref="bdb_db" />
        <constructor-arg ref="bdb_storage" />
    </bean>
    
    <!-- and the abstraction of the catalog -->
    <bean id="catalog" class="eu.baltrad.beast.db.Catalog" autowire="byType" />

    <!-- utilities when working with rules -->
    <bean id="ruleutil" class="eu.baltrad.beast.rules.util.RuleUtilities" autowire="byType"/>
    
    <!-- And we should have an application context to get hold of relevant managers -->
    <bean id="managercontext" class="eu.baltrad.beast.ManagerContext" autowire="byType" />
  
    <bean id="adaptorsController" class="eu.baltrad.beastui.web.controller.AdaptorsController" autowire="byType" />
    <bean id="groovyRoutesController" class="eu.baltrad.beastui.web.controller.GroovyRoutesController" autowire="byType" />
    <bean id="compositeRoutesController" class="eu.baltrad.beastui.web.controller.CompositeRoutesController" autowire="byType" />
    <bean id="volumeRoutesController" class="eu.baltrad.beastui.web.controller.VolumeRoutesController" autowire="byType" />
    <bean id="bdbTrimAgeRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimAgeRoutesController" autowire="byType" />
    <bean id="bdbTrimCountRoutesController" class="eu.baltrad.beastui.web.controller.BdbTrimCountRoutesController" autowire="byType" />
    <bean id="showRoutesController" class="eu.baltrad.beastui.web.controller.ShowRoutesController" autowire="byType" />
    
    <bean id="schedulerController" class="eu.baltrad.beastui.web.controller.SchedulerController" autowire="byType" />
</beans>
